{"version":3,"sources":["components/HomeAppBar.js","pages/Home.js","env/env.js","pages/Login.js","components/MainAppBar.js","components/SummaryComponent.js","components/AccountInfo.js","redux/reducer/navReducer.js","redux/reducer/httpReducer.js","redux/store/appStore.js","redux/actions/nav-actions.js","components/alert/SimpleAlert.js","components/modal/AccountModal.js","redux/actions/http-actions.js","components/Accounts.js","pages/Dashboard.js","components/TransactionInfo.js","components/modal/TransactionModal.js","components/modal/ConfirmModal.js","components/Transactions.js","pages/Account.js","pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["HomeAppBar","props","state","count","AppBar","position","Toolbar","style","justifyContent","display","Typography","variant","Button","color","float","onClick","history","push","React","Component","Home","this","Grid","container","justify","paddingTop","env","API_SERVER","Login","onChangeEmail","bind","onChangePass","login","userEmail","userPassword","styles","form","width","inputContainer","padding","inputText","maxWidth","minWidth","e","setState","target","value","email","password","jsonBody","JSON","stringify","fetch","credentials","body","headers","method","then","response","json","responseBody","status","alert","alignContent","height","noValidate","autoComplete","textAlign","TextField","id","label","type","onChange","to","MainAppBar","noWrap","IconButton","aria-label","Badge","badgeContent","edge","aria-haspopup","SummaryComponent","marginTop","direction","title","fontSize","balanceColor","balance","AccountInfo","normalizeProps","accounts","nextProps","accountsBalances","map","account","funds","i","length","navReducer","OPEN_ACC_MODAL","OPEN_TRANS_MODAL","OPEN_DEL_AC_MODAL","action","httpReducer","update","actions","rootReducer","combineReducers","nav","http","appStore","createStore","toggleAddAccModal","SimpleAlert","severities","success","warning","Alert","severity","AlertTitle","description","paperStyle","backgroundColor","minHeight","maxHeight","flexDirection","modalStyle","alignItems","paperRow","margin","AccountModal","accountType","accName","accFunds","accDescription","creationSuccess","handleAccTypeChange","onChangeAccDesc","onChangeAccName","onChangeFundsAmt","onCreateAccount","onCloseModal","ok","dispatch","navStore","Modal","open","isOpen","Paper","elevation","placeholder","multiline","rowsMax","InputLabel","Select","labelId","MenuItem","disabled","Accounts","rows","mapDataToRows","isAccModalOpen","anchorEl","toggleAddAccountModal","handleAccountClick","handleContextMenu","handleOnMenuClose","createData","accountName","subscribe","getState","operation","hasLimitReached","accountID","event","preventDefault","currentTarget","Add","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","key","onDoubleClick","onContextMenu","scope","align","Menu","keepMounted","Boolean","onClose","Dashboard","__isMounted","authenticateUser","getAllAccounts","accountInfo","TransactionInfo","balances","transactions","transaction","amount","TransactionModal","submitSuccess","handleAmountChange","createTransaction","closeModal","isModalOpen","ConfirmModal","onTrue","Transactions","mapDataToRow","deleteAccount","date","time","openTransactionModal","openConfirmDeleteAccountModal","Delete","Account","params","match","getAccountInfo","getTransactions","transactionInfo","Signup","confirmPassword","firstName","lastName","wrongPasswords","passHelperText","inRequest","emailError","emailHelperText","onChangePassword","onChangeConfPassword","onChangeFirstName","onChangeLastName","checkPasswords","signup","console","log","progress","LinearProgress","error","helperText","theme","createMuiTheme","palette","secondary","main","primary","App","path","exact","window","location","hostname","renderedApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.251bb387.chunk.js","sourcesContent":["import React from \"react\";\nimport {AppBar,Toolbar, Typography, Button }from \"@material-ui/core\"\n//import MenuIcon from \"@material-ui/icons/Menu\"\n\n\nclass HomeAppBar extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            count: 0\n        }\n    }\n\n    render() {\n        return (\n            <AppBar position=\"static\">\n                <Toolbar style={{justifyContent:\"space-between\",display:\"flex\"}}>\n                    <Typography variant=\"h6\" >\n                        Eazley Budgets\n                    </Typography>\n                    <Button color=\"inherit\" style={{float:\"right\"}} onClick={()=> this.props.history.push('/login')}>Login</Button>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default HomeAppBar;","import React from \"react\";\nimport HomeAppBar from \"./../components/HomeAppBar\"\nimport { Grid } from \"@material-ui/core\"\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <HomeAppBar history={this.props.history}/>\n                <Grid container justify=\"space-around\" style={{paddingTop:\"10px\"}}>\n                    \n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Home;","const isProd = false;\n\nconst prod = {\n    \n}\n\nconst dev = {\n    API_SERVER : \"http://localhost:3001/api\"\n}\n\nlet env;\n\nif (isProd)\n{\n    env = prod\n} else {\n    env = dev\n}\n\nexport default env","import React from \"react\";\nimport HomeAppBar from \"../components/HomeAppBar\"\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport env from \"./../env/env\"\nimport {Link} from \"react-router-dom\"\n\nclass Login extends React.Component {\n\n\n    constructor(props)\n    {\n        super(props)\n\n        this.onChangeEmail = this.onChangeEmail.bind(this)\n        this.onChangePass = this.onChangePass.bind(this)\n        this.login = this.login.bind(this)\n\n        this.state = {\n            userEmail : \"\",\n            userPassword : \"\"\n        }\n\n        this.styles = {\n            form : {\n                //marginTop: \"20px\",\n                width : \"67%\"\n            },\n            inputContainer : {\n                padding : \"10px\",\n                width : \"100%\",\n                display:\"flex\",\n                justifyContent:\"center\"\n            },\n            inputText : {\n                maxWidth : \"400px\",\n                minWidth : \"100px\",\n                width : \"100%\"\n            }\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    onChangeEmail(e)\n    {\n        //.log(e.target.value)\n        this.setState({\n            userEmail : e.target.value\n        })\n    }\n\n    onChangePass(e)\n    {\n        //.log(e.target.value)\n        this.setState({\n            userPassword : e.target.value\n        })\n    }\n\n    async login()\n    {\n        const email = this.state.userEmail;\n        const password = this.state.userPassword;\n\n        const jsonBody = JSON.stringify({email,password});\n\n        // TODO Work on this when server is down\n        fetch(`${env.API_SERVER}/user/login`,\n        {\n            credentials : \"include\",\n            body : jsonBody,\n            headers : {\n                \"content-type\" : \"application/json\"\n            },\n            method : \"POST\"\n        }).then((response)=>response.json())\n        .then((responseBody)=>{\n            if (responseBody.status === \"pass\")\n            {\n                this.props.history.push('/dashboard')\n            } else\n            {\n                alert(\"Wrong credentials\")\n            }\n        })        \n    }\n\n    render() {\n        return (\n            <div>\n                <HomeAppBar history={this.props.history}/>\n                <Grid container justify=\"center\" alignContent=\"center\" style={{height:\"calc( 100vh - 200px )\"}}>\n                    <form noValidate autoComplete=\"off\" style={this.styles.form}>\n                        <h1 style={{textAlign:\"center\"}}> LOGIN </h1>\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"email\" \n                            value={this.state.userEmail}\n                            onChange={this.onChangeEmail}/>\n                        </div>\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" \n                            value={this.state.userPassword}\n                            onChange={this.onChangePass}/>\n                        </div>\n                        <div style={this.styles.inputContainer}>\n                            <Button color=\"primary\" variant=\"contained\" onClick={this.login}> Login </Button>\n                        </div>\n                        <div style={{textAlign:\"center\"}}>\n                            <small> Don't have any account ? Sign up <Link to=\"/signup\"> here </Link> </small>\n                        </div>\n                    </form>\n                </Grid>\n            </div>\n\n        )\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\"\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n\nclass MainAppBar extends React.Component {\n\n    // TODO Fix up the icons in this section\n    render() {\n        return (\n            <AppBar position=\"fixed\">\n                <Toolbar style={{justifyContent:\"space-between\",display:\"flex\"}}>\n                    \n                    <Typography variant=\"h6\" noWrap>\n                        Accounts\n                    </Typography>\n                    \n                    <div>\n\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\">\n                            <AccountCircle />\n                        </IconButton>\n\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default MainAppBar;\n","import React from \"react\"\nimport {Grid} from \"@material-ui/core\"\n\nexport default function SummaryComponent(props) {\n\n    return (\n        <Grid container justify=\"flex-start\" style={{marginTop:\"100px\"}}>\n            <Grid container justify=\"center\" direction=\"column\" alignContent=\"center\">\n                <h1 style={{ textAlign: \"center\" }}> {props.title} </h1>\n                <div>\n                    <h1 style={{ fontSize: \"400%\", marginTop: \"20px\", textAlign: \"center\", color: props.balanceColor }}> $ {props.balance} </h1>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}","import React from \"react\"\nimport SummaryComponent from \"./SummaryComponent\"\n\n// Account Info Component can be used to represent accounts and transactions \n\nclass AccountInfo extends React.Component {\n    constructor(props) {\n        super(props)\n\n        const balance = this.normalizeProps(this.props)\n\n        this.state = {\n            accounts: this.props.accounts,\n            balance,\n            balanceColor: balance > 0 ? \"green\" : \"red\"\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const balance = this.normalizeProps(nextProps)\n\n        this.setState({\n            accounts: nextProps.accounts,\n            balance,\n            balanceColor: balance > 0 ? \"green\" : \"red\"\n        })\n    }\n\n\n    normalizeProps(props) {\n        let balance = 0;\n        let accountsBalances = props.accounts.map((account) => { return account.funds })\n\n        for (let i = 0; i < accountsBalances.length; i++) {\n            balance += accountsBalances[i];\n        }\n\n        return balance\n    }\n\n    render() {\n        return (\n            <div>\n                <SummaryComponent title=\"Account Summary\" balanceColor={this.state.balanceColor} balance={this.state.balance} />\n            </div>\n        )\n    }\n}\n\nexport default AccountInfo","const navReducer = ( state = { OPEN_ACC_MODAL : false, OPEN_TRANS_MODAL : false, OPEN_DEL_AC_MODAL : false },action) =>\n{\n    switch(action.type)\n    {\n        case \"OPEN_ADD_ACCOUNT_MODAL\" : return {\n            ...state,\n            OPEN_ACC_MODAL : true\n        };\n        case \"CLOSE_ADD_ACCOUNT_MODAL\" : return {\n            ...state,\n            OPEN_ACC_MODAL : false\n        };\n\n        case \"CLOSE_ADD_TRANSACTION_MODAL\" : return {\n            ...state,\n            OPEN_TRANS_MODAL : false\n        };\n\n        case \"OPEN_ADD_TRANSACTION_MODAL\" : return {\n            ...state,\n            OPEN_TRANS_MODAL : true\n        };\n\n        case \"OPEN_DELETE_ACCOUNT_MODAL\" : return {\n            ...state,\n            OPEN_DEL_AC_MODAL : true\n        } \n\n        case \"CLOSE_DELETE_ACCOUNT_MODAL\" : return {\n            ...state,\n            OPEN_DEL_AC_MODAL : false\n        }\n        \n        default : return state\n    }\n}\n\nexport default navReducer;","// http reducer is meant to send 'signals across components to live reload when an action is passed\nconst httpReducer = ( state = { update : \"none\"}, actions) => {\n    switch(actions.type)\n    {\n        case \"UPDATE_ACCOUNTS\" : return {\n            ...state,\n            update : \"accounts\"\n        }\n\n        case \"UPDATE_TRANSACTIONS\" : return {\n            ...state,\n            update : \"transactions\"\n        }\n        \n        case \"RESET\" : return {\n            ...state,\n            update : \"none\"\n        }\n        \n        default : return state\n    }\n}\n\nexport default httpReducer;","import { createStore, combineReducers } from \"redux\"\nimport navReducer from \"../reducer/navReducer\"\nimport httpReducer from \"../reducer/httpReducer\"\n\n\nconst rootReducer = combineReducers({\n    nav : navReducer,\n    http: httpReducer\n});\nconst appStore = createStore(rootReducer);\n\nexport default appStore;","export const OPEN_MODAL = \"open\" // TODO give these proper names\nexport const CLOSE_MODAL = \"close\"\nexport const OPEN_TRANS_MODAL = \"open_transaction_modal\"\nexport const CLOSE_TRANS_MODAL = \"close_transaction_modal\"\nexport const OPEN_DEL_AC_MODAL = \"open_delete_ac_modal\"\nexport const CLOSE_DEL_AC_MODAL = \"close_delete_ac_modal\"\n\n\nexport const toggleAddAccModal = (action) =>\n{\n    switch (action)\n    {\n        case \"open\" : return {\n            type : \"OPEN_ADD_ACCOUNT_MODAL\"\n        } \n        case \"close\" : return {\n            type : \"CLOSE_ADD_ACCOUNT_MODAL\"\n        }\n\n        case \"open_transaction_modal\" : return {\n            type : \"OPEN_ADD_TRANSACTION_MODAL\"\n        }\n\n        case \"close_transaction_modal\" : return {\n            type : \"CLOSE_ADD_TRANSACTION_MODAL\"\n        }\n\n        case \"open_delete_ac_modal\" : return {\n            type : \"OPEN_DELETE_ACCOUNT_MODAL\"\n        }\n\n        case \"close_delete_ac_modal\" : return {\n            type : \"CLOSE_DELETE_ACCOUNT_MODAL\"\n        }\n\n        default : return {\n            type : \"CLOSE_ADD_ACCOUNT_MODAL\"\n        }\n    }\n}","import React from \"react\"\nimport {Alert, AlertTitle} from \"@material-ui/lab\"\n\nexport default class SimpleAlert extends React.Component {\n\n\n    severities = {\n        success : \"success\",\n        warning : \"warning\"\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n                <Alert severity={this.severities[this.props.type]}>\n                    <AlertTitle>{this.props.title}</AlertTitle>\n                    <div>\n                        {this.props.description}\n                    </div>\n                </Alert>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport navStore from \"../../redux/store/appStore\"\nimport { CLOSE_MODAL, toggleAddAccModal } from \"../../redux/actions/nav-actions\"\nimport { updateAccounts } from \"../../redux/actions/http-actions\"\nimport { Modal, Paper, Button, TextField, InputLabel, Select, MenuItem } from \"@material-ui/core\"\n\nimport env from \"./../../env/env\"\n\nimport SimpleAlert from \"../alert/SimpleAlert\"\nimport appStore from \"../../redux/store/appStore\";\n\nconst paperStyle = {\n    backgroundColor: \"white\",\n    width: \"400px\",\n    minHeight: \"500px\",\n    maxHeight: \"550px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n}\n\nconst modalStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n}\n\nconst paperRow = {\n    margin: \"10px\",\n    textAlign: \"center\"\n}\n\nclass AccountModal extends React.Component {\n\n    constructor(props) \n    {\n        super(props)\n        this.state = {\n            accountType: \"NONE\",\n            accName : \"\",\n            accFunds: 0,\n            accDescription : \"\",\n            creationSuccess: false\n        }\n\n        this.handleAccTypeChange = this.handleAccTypeChange.bind(this)\n        this.onChangeAccDesc = this.onChangeAccDesc.bind(this)\n        this.onChangeAccName = this.onChangeAccName.bind(this)\n        this.onChangeFundsAmt = this.onChangeFundsAmt.bind(this)\n        this.onCreateAccount = this.onCreateAccount.bind(this)\n        this.onCloseModal = this.onCloseModal.bind(this)\n    }\n\n    handleAccTypeChange(e) \n    {\n        const accountType = e.target.value\n        this.setState({\n            accountType,\n        })\n    }\n\n    onChangeAccName(e)\n    {\n        this.setState({\n            accName : e.target.value\n        })\n    }\n\n    onChangeFundsAmt(e)\n    {\n        this.setState({\n            accFunds : e.target.value\n        })\n    }\n\n    // on change funds description\n    onChangeAccDesc(e)\n    {\n        this.setState({\n            accDescription : e.target.value\n        })\n    }\n\n\n    onCreateAccount()\n    {\n        fetch(`${env.API_SERVER}/account/create`,{\n            method : \"POST\",\n            headers : {\n                \"content-type\" : \"application/json\"\n            },\n            body : JSON.stringify(this.state),\n            credentials: \"include\"\n        }).then((response)=>{\n            if (response.status === 201)\n            {\n                this.setState({\n                    creationSuccess : response.ok // creationSuccess is a bool used to enable or disable controls\n                })\n                appStore.dispatch(updateAccounts())\n            }\n        })\n\n        \n    }\n\n    onCloseModal()\n    {\n        navStore.dispatch(toggleAddAccModal(CLOSE_MODAL))\n        this.setState({\n            creationSuccess : false\n        })\n    }\n\n    render() {\n\n\n        let alert \n        if (this.state.creationSuccess)\n            alert = <SimpleAlert type=\"success\" title=\"Account Created\" description=\"Account was created successfully !!\" />\n        else \n            alert = <span></span>\n\n        return (\n            <Modal open={this.props.isOpen} style={modalStyle}>\n                <Paper elevation={10} style={paperStyle}>\n                    <div style={{ textAlign: \"center\" }}>\n                        <h1> Create Account </h1>\n                    </div>\n                    <div style={paperRow}>\n                        <TextField variant=\"outlined\" label=\"Account Name\" placeholder=\"Enter Account Name\" onChange={this.onChangeAccName}/>\n                    </div>\n                    <div style={paperRow}>\n                        <TextField\n                            variant=\"outlined\"\n                            label=\"Description\"\n                            placeholder=\"Enter Description\"\n                            style={{ height: \"80px\" }}\n                            multiline\n                            rowsMax={4} \n                            onChange={this.onChangeAccDesc}/>\n                    </div>\n\n                    <div style={paperRow}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Account Type</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={this.state.accountType}\n                            onChange={this.handleAccTypeChange}\n                            label=\"Age\">\n                            <MenuItem value=\"NONE\">\n                                <em>None</em>\n                            </MenuItem>\n                            <MenuItem value=\"DEBIT\">Debit</MenuItem>\n                            <MenuItem value=\"CREDIT\">Credit</MenuItem>\n\n                        </Select>\n                    </div>\n\n                    <div style={paperRow}>\n                        <TextField variant=\"outlined\" label=\"Funds Amount\" placeholder=\"Funds To Start With\" type=\"number\" \n                        onChange={this.onChangeFundsAmt}/>\n                    </div>\n\n                    {alert}\n\n                    <div style={paperRow}>\n                        <Button style={{margin:\"10px\"}} variant=\"contained\" color=\"primary\" onClick={this.onCreateAccount} disabled={this.state.creationSuccess}> Create </Button>\n                        <Button style={{margin:\"10px\"}} variant=\"outlined\" onClick={this.onCloseModal}> { this.state.creationSuccess ? \"Close\" : \"Cancel\"} </Button>\n                    </div>\n\n                </Paper>\n            </Modal>\n        )\n    }\n}\n\nexport default AccountModal;","export const updateAccounts = () =>\n{\n    return {\n        type : \"UPDATE_ACCOUNTS\"\n    }\n}\n\nexport const updateTransactions = () =>\n{\n    return {\n        type : \"UPDATE_TRANSACTIONS\"\n    }\n}\n\nexport const reset = () =>{\n    return {\n        type : \"RESET\"\n    }\n}\n","import React from \"react\"\nimport { Grid, Button, Menu, MenuItem } from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\"\nimport  AccountModal from \"./modal/AccountModal\";\nimport { TableCell, TableHead, Table, TableContainer, TableRow , TableBody, Paper} from \"@material-ui/core\";\nimport { OPEN_MODAL, CLOSE_MODAL, toggleAddAccModal } from \"./../redux/actions/nav-actions\"\nimport appStore from \"../redux/store/appStore\"\n\n\n\nclass Accounts extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        const rows = this.mapDataToRows(this.props)\n\n        this.state = {\n            isAccModalOpen : false,\n            rows : rows,\n            anchorEl : null\n        }\n        \n        this.toggleAddAccountModal = this.toggleAddAccountModal.bind(this)\n        this.handleAccountClick = this.handleAccountClick.bind(this)\n        this.handleContextMenu = this.handleContextMenu.bind(this)\n        this.handleOnMenuClose = this.handleOnMenuClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        const rows = this.mapDataToRows(nextProps)\n\n        this.setState({\n            rows\n        })\n    }\n\n    mapDataToRows(props)\n    {\n        let rows = props.accounts.map((account)=>{\n            return this.createData(\n                account.id,\n                account.accountName,\n                account.accountType,\n                account.funds,\n                account.description,\n                \"No\")\n        })\n        return rows;\n    }\n\n    toggleAddAccountModal()\n    {\n        // Toggles the account\n        appStore.subscribe(()=>{\n\n            let isAccModalOpen = appStore.getState().nav.OPEN_ACC_MODAL;\n            this.setState({\n                isAccModalOpen\n            })\n        })\n\n        let operation = this.state.isAccModalOpen ? CLOSE_MODAL : OPEN_MODAL;\n\n        appStore.dispatch(toggleAddAccModal(operation));   \n    }\n\n    createData(id,accountName, type, funds, description, hasLimitReached) {\n        return { id,accountName, type, funds, description, hasLimitReached };\n    }\n\n    handleAccountClick(accountID)\n    {\n        this.props.history.push(`/dashboard/account/${accountID}`)\n    }\n\n    handleContextMenu(event)\n    {\n        event.preventDefault()\n        this.setState({\n            anchorEl : event.currentTarget\n        })\n    }\n\n    handleOnMenuClose()\n    {\n        this.setState({\n            anchorEl : null\n        })\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"flex-start\">\n\n                <div style={{ width: \"100%\" }}>\n\n                    <h1 style={{ textAlign: \"center\" }}> Accounts </h1>\n\n                    <div style={{padding:\"10px\", justifyContent:\"flex-end\", display:\"flex\"}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.toggleAddAccountModal}> <Add/> </Button>\n                    </div>\n\n                    <AccountModal isOpen={this.state.isAccModalOpen}/>\n\n                    <TableContainer component={Paper}>\n                        <Table  aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Account Name</TableCell>\n                                    <TableCell > Type </TableCell>\n                                    <TableCell>Funds</TableCell>\n                                    <TableCell>Description</TableCell>\n                                    <TableCell>  </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.rows.map((account) => (\n                                    <TableRow key={account.id} onDoubleClick={()=>this.handleAccountClick(account.id)} onContextMenu={this.handleContextMenu}>\n                                        \n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {account.accountName}\n                                        </TableCell>\n                                        <TableCell>{account.type}</TableCell>\n                                        <TableCell>{account.funds}</TableCell>\n                                        <TableCell align=\"left\">{account.description}</TableCell>\n                                        <TableCell>\n                                            <Menu\n                                                id=\"simple-menu\"\n                                                keepMounted\n                                                anchorEl={this.state.anchorEl}\n                                                open={Boolean(this.state.anchorEl)}\n                                                onClose={this.handleOnMenuClose}\n                                                >\n                                                { /** Todo Work on this */}\n\n                                                <MenuItem  onClose={this.handleOnMenuClose} onClick={()=>{this.handleAccountClick(account.id)}}> View Transactions </MenuItem>\n                                            </Menu>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer> \n                </div>\n\n            </Grid>\n        )\n    }\n}\n\nexport default Accounts","import React from \"react\";\nimport MainAppBar from \"../components/MainAppBar\"\nimport AccountInfo from \"../components/AccountInfo\"\nimport Accounts from \"./../components/Accounts\";\nimport appStore from \"./../redux/store/appStore\"\nimport { reset } from \"./../redux/actions/http-actions\"\nimport env from \"./../env/env\"\n\n\nclass Dashboard extends React.Component {\n\n\n    __isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: []\n        }\n        this.authenticateUser()\n    }\n\n    componentDidMount() {\n        this.__isMounted = true \n\n        // TODO Work on memory leak \n        // https://stackoverflow.com/questions/53949393/cant-perform-a-react-state-update-on-an-unmounted-component\n        if (this.__isMounted)\n        {\n            this.getAllAccounts();\n            appStore.subscribe(() => {\n    \n                let updateState = appStore.getState().http.update\n                if (updateState === \"accounts\") {\n                    this.getAllAccounts()\n                    appStore.dispatch(reset())\n                }\n            })\n        }\n    }\n\n    // get accounts\n    getAllAccounts() {\n\n        // send api request to get all accounts\n        fetch(`${env.API_SERVER}/account/all`,\n        {\n            credentials: \"include\",\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        }).then((response)=>response.json())\n        .then((accounts)=>{\n            this.setState({\n                accounts\n            })\n        })\n        \n    }\n\n    authenticateUser()\n    {\n        fetch(`${env.API_SERVER}/user/authenticate`,{\n            credentials : \"include\",\n            method : \"POST\"\n        })\n        .then((response)=>{\n            if (response.status === 403)\n                this.props.history.push(\"/login\")\n        })\n    }\n\n    componentWillUnmount()\n    {\n        this.__isMounted = false\n    }\n\n    render() {\n        \n        const accountInfo = <AccountInfo accounts={this.state.accounts} /> // Account info show summary\n        const accounts = <Accounts accounts={this.state.accounts}  history={this.props.history}/>\n\n        return (\n\n            <div>\n                <MainAppBar title=\"Home\"/>\n                <div>\n                    {accountInfo}\n                </div>\n                <div>\n                    {accounts}\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Dashboard;","import React from \"react\"\nimport SummaryComponent from \"./SummaryComponent\"\n\nexport default class TransactionInfo extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            balance : 0,\n            balanceColor : \"red\"\n        }\n    }\n\n    normalizeProps(props)\n    {\n        let balance = 0;\n        let transactions = props.transactions\n\n        let balances = transactions.map((transaction)=> {\n            return transaction.amount\n        })\n\n        for(let i = 0; i < balances.length; i++)\n        {\n            balance += balances[i];\n        }\n\n        this.setState({\n            balance,\n            balanceColor : balance > 0 ? \"green\" : \"red\"\n        })\n\n        return balance\n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        this.normalizeProps(nextProps)\n    }\n\n    componentDidMount()\n    {\n\n    }\n\n    render()\n    {\n        return(\n            <div>\n                <SummaryComponent title=\"Transaction Summary\" balance={this.state.balance} balanceColor={this.state.balanceColor}/>\n            </div>\n        )\n    }\n}","import React from \"react\"\nimport { Modal, Paper, Button, TextField } from \"@material-ui/core\"\nimport SimpleAlert from \"./../alert/SimpleAlert\"\nimport {updateTransactions} from \"./../../redux/actions/http-actions\"\nimport appStore from \"./../../redux/store/appStore\"\nimport {toggleAddAccModal, CLOSE_TRANS_MODAL} from \"./../../redux/actions/nav-actions\"\nimport env from \"./../../env/env\"\n\n\nconst paperStyle = {\n    backgroundColor: \"white\",\n    width: \"400px\",\n    minHeight: \"250px\",\n    maxHeight: \"300px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n}\n\nconst modalStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n}\n\nconst paperRow = {\n    margin: \"10px\",\n    textAlign: \"center\"\n}\n\nexport default class TransactionModal extends React.Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            submitSuccess : false,\n            accountInfo : {},\n            amount : 0\n        }\n\n        this.handleAmountChange = this.handleAmountChange.bind(this)\n        this.createTransaction = this.createTransaction.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        this.setState({\n            accountInfo : nextProps.accountInfo\n        })\n    }\n\n    componentDidMount()\n    {\n        let isModalOpen = appStore.getState().nav.OPEN_TRANS_MODAL\n\n        this.setState({\n            isModalOpen\n        })\n\n        appStore.subscribe(()=>{\n            let isModalOpen = appStore.getState().nav.OPEN_TRANS_MODAL\n            this.setState({\n                isModalOpen\n            })\n        })\n    }\n\n    closeModal()\n    {\n        appStore.dispatch(toggleAddAccModal(CLOSE_TRANS_MODAL))\n        this.setState({\n            submitSuccess : false\n        })\n    }\n\n    handleAmountChange(event)\n    {\n        let amount = event.target.value\n        this.setState({\n            amount\n        })\n    }\n\n    createTransaction()\n    {\n        let accountID = this.state.accountInfo.id\n        let amount = `${this.state.amount}` // convert it to a string\n        let accountType = this.state.accountInfo.accountType\n\n        fetch(`${env.API_SERVER}/transaction/create`,\n        {\n            method : \"POST\",\n            body : JSON.stringify({accountID,amount,accountType}),\n            headers : {\n                \"content-type\" : \"application/json\"\n            },\n            credentials : \"include\"\n        }).then((response)=>{\n\n            if (response.status === 201)\n            {\n                appStore.dispatch(updateTransactions())\n\n                this.setState({\n                    submitSuccess : response.ok\n                })\n            }\n        })\n    }\n\n    render()\n    {\n        let alert \n        if (this.state.submitSuccess)\n            alert = <SimpleAlert type=\"success\" title=\"Account Created\" description=\"Account was created successfully !!\" />\n        else \n            alert = <span></span>\n\n        return(\n            <Modal open={this.state.isModalOpen || false} style={modalStyle}>\n                <Paper elevation={10} style={paperStyle}>\n                    <div style={{ textAlign: \"center\" }}>\n                        <h1> Add Transaction </h1>\n                    </div>\n                    \n                    <div style={paperRow}>\n                        <TextField variant=\"outlined\" label=\"Funds Amount\" placeholder=\"Funds To Start With\" type=\"number\"\n                        onChange={this.handleAmountChange}/>\n                    </div>\n\n                    {alert}\n\n                    <div style={paperRow}>\n                        <Button style={{margin:\"10px\"}} variant=\"contained\" color=\"primary\" disabled={this.state.submitSuccess} onClick={this.createTransaction}> Add </Button>\n                        <Button style={{margin:\"10px\"}} variant=\"outlined\" onClick={this.closeModal}> Close </Button>\n                    </div>\n\n                </Paper>\n            </Modal>\n        )\n    }\n}","import React from \"react\";\nimport SimpleAlert from \"../alert/SimpleAlert\";\nimport { Button, Modal, Paper } from \"@material-ui/core\";\nimport appStore from \"./../../redux/store/appStore\"\nimport {toggleAddAccModal, CLOSE_DEL_AC_MODAL} from \"./../../redux/actions/nav-actions\"\n\nconst paperStyle = {\n    backgroundColor: \"white\",\n    width: \"400px\",\n    minHeight: \"100px\",\n    maxHeight: \"550px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n}\n\nconst modalStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n}\n\nconst paperRow = {\n    margin: \"10px\",\n    textAlign: \"center\"\n}\n\nexport default class ConfirmModal extends React.Component {\n\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            isOpen : false,\n            onTrue : false\n        }\n    }\n    \n\n    componentWillReceiveProps(nextProps)\n    {\n        let onTrue = nextProps.onTrue\n        this.setState({\n            onTrue\n        })\n    }\n\n    componentDidMount()\n    {\n        appStore.subscribe(()=>{\n\n            let isOpen = appStore.getState().nav.OPEN_DEL_AC_MODAL\n            this.setState({\n                isOpen\n            })\n        })\n    }\n\n    closeModal()\n    {\n        appStore.dispatch(toggleAddAccModal(CLOSE_DEL_AC_MODAL))\n    }\n\n    render() {\n        return (\n            <Modal open={this.state.isOpen} style={modalStyle}>\n                <Paper elevation={10} style={paperStyle}>\n                    <SimpleAlert\n                        type=\"warning\"\n                        title=\"Delete Account\"\n                        description=\"Are you sure that you want to do this ? Please Confirm.\" />\n                    \n\n                    <div style={{...paperRow, \"padding\" : \"10px\"}}>\n                        <div>\n                            <Button style={{\"margin\":\"5px\"}} onClick={this.state.onTrue}> Yes </Button>\n                            <Button style={{\"margin\":\"5px\"}} variant=\"outlined\" onClick={this.closeModal}> No </Button>\n                        </div> \n                    </div>\n                </Paper>\n            </Modal>\n       )\n    }\n}","import React from \"react\"\nimport TransactionModal from \"./modal/TransactionModal\"\nimport { TableCell, TableHead, Table, TableContainer, TableRow , TableBody, Paper} from \"@material-ui/core\";\nimport { Button, Grid } from \"@material-ui/core\"\nimport { Add, Delete } from \"@material-ui/icons\"\nimport ConfirmModal from \"./modal/ConfirmModal\";\n\nimport env from \"./../env/env\"\nimport appStore from \"./../redux/store/appStore\";\nimport { toggleAddAccModal, OPEN_TRANS_MODAL} from \"./../redux/actions/nav-actions\"\nimport { OPEN_DEL_AC_MODAL, CLOSE_DEL_AC_MODAL } from \"./../redux/actions/nav-actions\"\n\n\n\nexport default class Transactions extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        let rows = this.mapDataToRow(this.props)\n\n        this.state = {\n            rows,\n            accountInfo : {}\n        }\n\n        this.deleteAccount = this.deleteAccount.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        let rows = this.mapDataToRow(nextProps)\n        this.setState({\n            rows,\n            accountInfo : nextProps.accountInfo\n        })\n    }\n\n    mapDataToRow(props)\n    {\n        let rows = props.transactions.map((transaction)=>{\n            return this.createData(transaction.id,transaction.amount,transaction.date,transaction.time)\n        })\n        \n        return rows\n    }\n\n    createData(id, amount, date , time) {\n        return { id, amount, date , time};\n    }\n\n    openTransactionModal()\n    {\n        appStore.dispatch(toggleAddAccModal(OPEN_TRANS_MODAL))\n    }\n\n    openConfirmDeleteAccountModal()\n    {\n        appStore.dispatch(toggleAddAccModal(OPEN_DEL_AC_MODAL))\n    }\n    \n\n    // TODO : Make this called once\n    deleteAccount()\n    {\n        fetch(`${env.API_SERVER}/account/delete/${this.state.accountInfo.id}`,{\n            credentials : \"include\",\n            method : \"DELETE\"\n        }).then((response)=>{\n            // redirect the user\n            appStore.dispatch(toggleAddAccModal(CLOSE_DEL_AC_MODAL))\n            this.props.history.push('/dashboard')\n        })\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"flex-start\">\n\n                <div style={{ width: \"100%\" }}>\n\n                    <h1 style={{ textAlign: \"center\" }}> Transactions </h1>\n\n                    <div style={{padding:\"10px\", justifyContent:\"flex-end\", display:\"flex\"}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.openTransactionModal}> <Add/> </Button>\n                        <Button color=\"primary\" onClick={this.openConfirmDeleteAccountModal}> <Delete/> </Button>\n                    </div>\n                    <TransactionModal accountInfo={this.state.accountInfo}/>\n                    <ConfirmModal onTrue={this.deleteAccount}/>\n                    <TableContainer component={Paper}>\n                        <Table  aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell> Amount </TableCell>\n                                    <TableCell> Date </TableCell>\n                                    <TableCell> Time </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.rows.map((transaction) => (\n                                    <TableRow key={transaction.id}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {transaction.amount}\n                                        </TableCell>\n                                        <TableCell>{transaction.date}</TableCell>\n                                        <TableCell>{transaction.time}</TableCell>\n                                        \n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer> \n                </div>\n\n            </Grid>\n        )\n    }\n}","import React from \"react\"\nimport MainAppBar from \"./../components/MainAppBar\"\nimport TransactionInfo from \"./../components/TransactionInfo\"\nimport Transactions from \"./../components/Transactions\"\nimport {Paper,Grid} from \"@material-ui/core\"\nimport appStore from \"./../redux/store/appStore\"\nimport {reset} from \"./../redux/actions/http-actions\"\nimport env from \"./../env/env\"\n\n\nexport default class Account extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            transactions: [],\n            accountInfo: {}\n        }\n\n        this.authenticateUser();\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n\n        appStore.subscribe(()=>{\n            if (appStore.getState().http.update === \"transactions\")\n            {\n                this.getAccountInfo(params.id);\n                this.getTransactions(params.id)\n                appStore.dispatch(reset())\n            }\n        })\n\n        this.getTransactions(params.id)\n        this.getAccountInfo(params.id)\n    }\n\n\n    authenticateUser()\n    {\n        fetch(`${env.API_SERVER}/user/authenticate`,{\n            credentials : \"include\",\n            method : \"POST\"\n        })\n        .then((response)=>{\n            if (response.status === 403)\n                this.props.history.push(\"/login\")\n        })\n    }\n\n    getAccountInfo(accountID)\n    {\n        fetch(`${env.API_SERVER}/account/info/${accountID}`,{\n            credentials : \"include\"\n        })\n        .then((response)=>response.json())\n        .then((accountInfo)=>{\n            this.setState({\n                accountInfo\n            })\n        })\n    }\n\n    getTransactions(accountID) \n    {\n        fetch(`${env.API_SERVER}/transaction/from-account/${accountID}`,\n        {\n            credentials : \"include\"\n        })\n        .then((response)=>response.json())\n        .then((transactions)=>{\n            this.setState({\n                transactions\n            })\n        })\n    }\n\n    render() \n    {\n\n        let transactionInfo = <TransactionInfo transactions={this.state.transactions} />\n\n        return (\n            <div>\n                <MainAppBar title=\"Account\" />\n                {transactionInfo}\n                <Grid container\n                justify=\"center\"\n                >\n                    <Paper style={{padding:\"30px\"}} variant=\"outlined\" elevation={10}>\n                        {this.state.accountInfo.description} \n                    </Paper>  \n                </Grid>\n                <Transactions transactions={this.state.transactions} accountInfo={this.state.accountInfo} history={this.props.history}/>\n            </div>\n        )\n    }\n}","import React from \"react\"\nimport {Button, Grid, TextField, LinearProgress} from \"@material-ui/core\"\nimport HomeAppBar from \"./../components/HomeAppBar\"\nimport { Link } from \"react-router-dom\"\nimport env from \"./../env/env\"\n\n\n// TODO : Add logic for sign up\n\nexport default class Signup extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            userEmail : \"\",\n            password : \"\",\n            confirmPassword: \"\",\n            firstName: \"\",\n            lastName : \"\",\n            wrongPasswords : false,\n            passHelperText: \"\",\n            inRequest: false, // represents whether an http request is being sent ( asynchronious )\n            emailError : false,\n            emailHelperText : \"\"\n        }\n\n        this.styles = {\n            form : {\n                //marginTop: \"20px\",\n                width : \"67%\"\n            },\n            inputContainer : {\n                padding : \"10px\",\n                width : \"100%\",\n                display:\"flex\",\n                justifyContent:\"center\"\n            },\n            inputText : {\n                maxWidth : \"400px\",\n                minWidth : \"100px\",\n                width : \"100%\"\n            }\n        }\n\n        // bind this to functions\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeConfPassword = this.onChangeConfPassword.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.checkPasswords = this.checkPasswords.bind(this);\n        this.signup = this.signup.bind(this)\n\n        console.log(env)\n    }\n\n    onChangeFirstName(event)\n    {\n        this.setState({\n            firstName : event.target.value\n        })\n    }\n\n    onChangeLastName(event)\n    {\n        this.setState({\n            lastName : event.target.value\n        })\n    }\n\n    onChangeEmail(event)\n    {\n        this.setState({\n            userEmail : event.target.value\n        })\n    }\n\n    onChangePassword(event)\n    {\n        this.setState({\n            password : event.target.value\n        })\n    }\n    \n    onChangeConfPassword(event)\n    {\n        this.setState({\n            confirmPassword : event.target.value\n        })\n    }\n\n    checkPasswords()\n    {\n        if (this.state.confirmPassword.length > 0)\n        {\n            if (this.state.password === this.state.confirmPassword)\n            {\n                this.setState({\n                    wrongPasswords : false\n                })\n                return true\n            } else {\n                this.setState({\n                    wrongPasswords : true,\n                    passHelperText : \"Passwords don't match\"\n                })\n                return false\n            }\n        } else {\n            this.setState({\n                wrongPasswords : true,\n                passHelperText : \"Please confirm your password\"\n            })\n            return false\n        }\n    }\n\n    signup()\n    {\n        this.checkPasswords();\n        console.log(this.state.wrongPasswords)\n\n        if (!this.checkPasswords())\n            return\n        \n        console.log(this.state)\n\n        this.setState({\n            inRequest : true\n        })\n\n        const firstName = this.state.firstName;\n        const lastName = this.state.lastName;\n        const userEmail = this.state.userEmail;\n        const password = this.state.password;\n\n        fetch(`${env.API_SERVER}/user/sign-up`,\n        {\n            method : \"POST\",\n            credentials : \"include\",\n            headers : {\n                \"content-type\" : \"application/json\"\n            },\n            body : JSON.stringify({\n                firstName,\n                lastName,\n                userEmail,\n                password\n            })\n        })\n        .then((response)=>{\n            this.setState({\n                inRequest : false\n            })\n            if (response.status === 409 || response.status === 500 )\n            {\n                this.setState({\n                    emailError : true,\n                    emailHelperText : \"This email already exists\"\n                })\n            } else if (response.status === 201) {\n                this.props.history.push(\"/dashboard\")\n            }\n        })\n    }\n\n    render()\n    {\n\n\n        const progress = this.state.inRequest ? <LinearProgress/> : <div/>\n\n        return(\n            <div>\n                <HomeAppBar history={this.props.history}/>\n                <Grid container justify=\"center\" alignContent=\"center\" style={{height:\"calc( 100vh - 200px )\"}}>\n                    <form noValidate autoComplete=\"off\" style={this.styles.form}>\n                        <h1 style={{textAlign:\"center\"}}> SIGN UP </h1>\n                        \n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" type=\"text\" \n                            value={this.state.firstName}\n                            onChange={this.onChangeFirstName}\n                            placeholder=\"Enter First Name\"/>\n                        </div>\n\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" type=\"text\" \n                            value={this.state.lastName}\n                            onChange={this.onChangeLastName}\n                            placeholder=\"Enter Last Name\"/>\n                        </div>\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"email\" \n                            value={this.state.userEmail}\n                            onChange={this.onChangeEmail}\n                            placeholder=\"Enter Email\"\n                            error={this.state.emailError}\n                            helperText={this.state.emailHelperText}/>\n                        </div>\n\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" \n                            value={this.state.password}\n                            onChange={this.onChangePassword}\n                            placeholder=\"Create Password\"/>\n                        </div>\n\n                        <div style={this.styles.inputContainer}>\n                            <TextField style={this.styles.inputText} id=\"outlined-basic\" label=\"Confirm Password\" variant=\"outlined\" type=\"password\" \n                            value={this.state.confirmPassword}\n                            onChange={this.onChangeConfPassword}\n                            placeholder=\"Confirm Your Password\"\n                            error={this.state.wrongPasswords}\n                            helperText={this.state.passHelperText}/>\n                        </div>\n\n                        <div>\n                            {progress}\n                        </div>\n\n                        <div style={this.styles.inputContainer}>\n                            <Button color=\"primary\" variant=\"contained\" onClick={this.signup}> Sign Up </Button>\n                        </div>\n\n                        <div style={{textAlign:\"center\"}}>\n                            <small> Already have any account ? Login <Link to=\"/login\"> here </Link> </small>\n                        </div>\n                        \n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from \"./pages/Home\"\nimport Login from \"./pages/Login\"\nimport Dashboard from \"./pages/Dashboard\";\nimport Account from \"./pages/Account\";\nimport Signup from \"./pages/Signup\";\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// Or Create your Own theme:\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#E33E7F'\n    },\n    primary: {\n      main: '#1976d2'\n    }\n  }\n});\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/signup\" component={Signup} exact />\n            <Route path=\"/dashboard\" component={Dashboard} exact />\n            <Route path=\"/dashboard/account/:id\" component={Account}/> \n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nlet strictMode = false;\n\nlet renderedApp = strictMode ? ( <React.StrictMode>\n                                  <App />\n                                </React.StrictMode>) : \n                                <App/>\n\nReactDOM.render(\n  renderedApp,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}